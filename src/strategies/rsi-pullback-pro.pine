//@version=5
strategy("RSI Pullback Pro - Stratus Engine", shorttitle="RSI-PB-Pro", overlay=true, 
         default_qty_type=strategy.percent_of_equity, default_qty_value=10)

// === STRATEGY PARAMETERS ===
// These parameters are optimized by Stratus Engine
rsi_period = input.int(2, title="RSI Period", minval=2, maxval=50, group="RSI Settings")
oversold_level = input.int(28, title="Oversold Level", minval=10, maxval=40, group="RSI Settings")
overbought_level = input.int(72, title="Overbought Level", minval=60, maxval=90, group="RSI Settings")
confirmation_period = input.int(3, title="Confirmation Period", minval=1, maxval=10, group="Signal Settings")

// === WEBHOOK SETTINGS ===
// Note: Replace with actual webhook URL generated by the platform
webhook_url = "http://localhost:3001/api/pine-script-webhook/rsi-pullback-001/YOUR_WEBHOOK_ID"
strategy_id = "rsi-pullback-001"

// === TECHNICAL INDICATORS ===
rsi = ta.rsi(close, rsi_period)
ma_short = ta.sma(close, 20)
ma_long = ta.sma(close, 50)

// === ENTRY CONDITIONS ===
// Long Entry: RSI oversold + price above long MA + confirmation
rsi_oversold = rsi <= oversold_level
price_above_long_ma = close > ma_long
uptrend = ma_short > ma_long

long_condition = rsi_oversold and price_above_long_ma and uptrend
long_confirmed = ta.barssince(long_condition) <= confirmation_period and long_condition[confirmation_period]

// Short Entry: RSI overbought + price below long MA + confirmation  
rsi_overbought = rsi >= overbought_level
price_below_long_ma = close < ma_long
downtrend = ma_short < ma_long

short_condition = rsi_overbought and price_below_long_ma and downtrend
short_confirmed = ta.barssince(short_condition) <= confirmation_period and short_condition[confirmation_period]

// === EXIT CONDITIONS ===
// Exit long when RSI reaches overbought or price crosses below short MA
long_exit = rsi >= overbought_level or close < ma_short

// Exit short when RSI reaches oversold or price crosses above short MA
short_exit = rsi <= oversold_level or close > ma_short

// === STRATEGY EXECUTION ===
if long_confirmed and strategy.position_size == 0
    strategy.entry("Long", strategy.long, 
                  comment="RSI Long @ " + str.tostring(close, "#.##"))
    
    // Send webhook alert for BUY signal
    alert('{"passphrase": "sdfqoei1898498", "ticker": "' + syminfo.ticker + '", "strategy": {"order_action": "buy", "order_type": "limit", "order_price": "' + str.tostring(close) + '", "order_contracts": "0.01", "type": "buy", "volume": "0.01", "pair": "' + syminfo.ticker + '", "validate": "false", "close": {"order_type": "limit", "price": "' + str.tostring(close) + '"}, "stop_loss": "' + str.tostring(close * 0.99) + '"}}', 
          alert.freq_once_per_bar)

if short_confirmed and strategy.position_size == 0
    strategy.entry("Short", strategy.short, 
                  comment="RSI Short @ " + str.tostring(close, "#.##"))
    
    // Send webhook alert for SELL signal
    alert('{"passphrase": "sdfqoei1898498", "ticker": "' + syminfo.ticker + '", "strategy": {"order_action": "sell", "order_type": "limit", "order_price": "' + str.tostring(close) + '", "order_contracts": "0.01", "type": "sell", "volume": "0.01", "pair": "' + syminfo.ticker + '", "validate": "false", "close": {"order_type": "limit", "price": "' + str.tostring(close) + '"}, "stop_loss": "' + str.tostring(close * 1.01) + '"}}', 
          alert.freq_once_per_bar)

// === EXIT TRADES ===
if strategy.position_size > 0 and long_exit
    strategy.close("Long", comment="Exit Long @ " + str.tostring(close, "#.##"))
    
    // Send webhook alert for position CLOSE
    alert('{"passphrase": "sdfqoei1898498", "ticker": "' + syminfo.ticker + '", "strategy": {"order_action": "close", "order_type": "limit", "order_price": "' + str.tostring(close) + '", "order_contracts": "0", "type": "close", "volume": "0", "pair": "' + syminfo.ticker + '", "validate": "false", "close": {"order_type": "limit", "price": "' + str.tostring(close) + '"}, "stop_loss": "0"}}', 
          alert.freq_once_per_bar)

if strategy.position_size < 0 and short_exit
    strategy.close("Short", comment="Exit Short @ " + str.tostring(close, "#.##"))
    
    // Send webhook alert for position CLOSE
    alert('{"passphrase": "sdfqoei1898498", "ticker": "' + syminfo.ticker + '", "strategy": {"order_action": "close", "order_type": "limit", "order_price": "' + str.tostring(close) + '", "order_contracts": "0", "type": "close", "volume": "0", "pair": "' + syminfo.ticker + '", "validate": "false", "close": {"order_type": "limit", "price": "' + str.tostring(close) + '"}, "stop_loss": "0"}}', 
          alert.freq_once_per_bar)

// === VISUALIZATION ===
// Plot RSI levels
hline(overbought_level, "Overbought", color=color.red, linestyle=hline.style_dashed)
hline(oversold_level, "Oversold", color=color.green, linestyle=hline.style_dashed)
hline(50, "Midline", color=color.gray, linestyle=hline.style_dotted)

// Plot moving averages
plot(ma_short, "MA Short", color=color.blue, linewidth=1)
plot(ma_long, "MA Long", color=color.orange, linewidth=2)

// Plot entry/exit signals
plotshape(long_confirmed, title="Long Entry", style=shape.triangleup, 
          location=location.belowbar, color=color.green, size=size.small)
plotshape(short_confirmed, title="Short Entry", style=shape.triangledown, 
          location=location.abovebar, color=color.red, size=size.small)

// === PERFORMANCE TRACKING ===
// Display key metrics on chart
var table performance_table = table.new(position.top_right, 2, 6, bgcolor=color.white, 
                                       border_width=1)

if barstate.islast
    table.cell(performance_table, 0, 0, "Metric", text_color=color.black, bgcolor=color.gray)
    table.cell(performance_table, 1, 0, "Value", text_color=color.black, bgcolor=color.gray)
    table.cell(performance_table, 0, 1, "Total Trades", text_color=color.black)
    table.cell(performance_table, 1, 1, str.tostring(strategy.closedtrades), text_color=color.black)
    table.cell(performance_table, 0, 2, "Win Rate %", text_color=color.black)
    table.cell(performance_table, 1, 2, str.tostring(strategy.wintrades/strategy.closedtrades*100, "#.#"), 
               text_color=color.black)
    table.cell(performance_table, 0, 3, "Profit Factor", text_color=color.black)
    table.cell(performance_table, 1, 3, str.tostring(strategy.grossprofit/strategy.grossloss, "#.##"), 
               text_color=color.black)
    table.cell(performance_table, 0, 4, "RSI Current", text_color=color.black)
    table.cell(performance_table, 1, 4, str.tostring(rsi, "#.#"), 
               text_color=(rsi > 70 ? color.red : rsi < 30 ? color.green : color.black))
    table.cell(performance_table, 0, 5, "Strategy ID", text_color=color.black)
    table.cell(performance_table, 1, 5, strategy_id, text_color=color.blue)

// === STRATUS ENGINE OPTIMIZATION NOTES ===
// The following parameters are optimized by Stratus Engine:
// - rsi_period: Optimized between 5-50 based on market conditions
// - oversold_level: Optimized between 10-40 for entry timing
// - overbought_level: Optimized between 60-90 for exit timing
// - confirmation_period: Optimized between 1-10 bars for signal confirmation
//
// Webhook URL: Generated dynamically by Signal Cartel platform
// Strategy ID: rsi-pullback-001
//
// Alert JSON Format:
// {
//   "passphrase": "sdfqoei1898498",
//   "ticker": "BTCUSD",
//   "strategy": {
//     "order_action": "buy|sell|close",
//     "order_type": "limit",
//     "order_price": "50000.00",
//     "order_contracts": "0.01",
//     "type": "buy|sell|close",
//     "volume": "0.01",
//     "pair": "BTCUSD",
//     "validate": "true|false",
//     "close": {
//       "order_type": "limit",
//       "price": "50000.00"
//     },
//     "stop_loss": "49500.00"
//   }
// }
//
// IMPORTANT: Set "validate": "false" for testing (no real trades)
//            Set "validate": "false" for live trading